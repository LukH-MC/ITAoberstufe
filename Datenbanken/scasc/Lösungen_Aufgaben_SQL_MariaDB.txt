Lösungen

Aufgabe 1:

ALTER TABLE kunde
ADD CONSTRAINT pk_kunde PRIMARY KEY(kundennr);

Aufgabe 2:

ALTER TABLE bestellung
ADD CONSTRAINT pk_bestellung PRIMARY KEY(bestellnr);

Aufgabe 3:

ALTER TABLE bestellung
ADD CONSTRAINT bestell_kunde_fk FOREIGN KEY(kundennr) REFERENCES kunde(kundennr);

Aufgabe 4:

SELECT bestellnr, kundennr, rechnungsbetrag,
CASE WHEN rechnungsbetrag < 100 THEN 'gering'
     WHEN rechnungsbetrag >= 100 AND rechnungsbetrag < 300 THEN 'mittel'
     WHEN rechnungsbetrag > 300 THEN 'hoch'
END
AS "Bewertung"
FROM bestellung;

Aufgabe 5:

SELECT bestellnr, k.kundennr, rechnungsbetrag, name, vorname, strasse, plz, ort
FROM bestellung b JOIN kunde k 
ON (b.kundennr = k.kundennr);

Aufgabe 6:

SELECT ROUND(AVG(DATEDIFF(DATE_FORMAT(CURRENT_DATE(),
'%Y-%m-%d'),DATE_FORMAT(eintrittsdatum,'%Y-%m-%d')))/365.0,2) AS 'Zugehoerigkeitsmittel'
FROM mitarbeiter;

Aufgabe 7:

ALTER TABLE KUNDE
MODIFY COLUMN email VARCHAR(60);

Aufgabe 8:

ALTER TABLE kunde
ADD CONSTRAINT unimail UNIQUE(EMAIL);

Aufgabe 9:

CREATE TABLE copy_ma1
AS
SELECT * FROM mitarbeiter;

Aufgabe 10:

UPDATE copy_ma
SET EMAIL = '';

Aufgabe 11:

UPDATE copy_ma
SET EMAIL = LOWER((CONCAT(SUBSTRING(Name,1,3),SUBSTRING(Vorname,1,3),'@beispielfirma.de')))

Aufgabe 12:

SELECT vorname, name, EINTRITTSDATUM FROM MITARBEITER
WHERE MONTH(eintrittsdatum)=6;

Aufgabe 13:

INSERT INTO abteilung
VALUES(7,'Marketing');

Aufgabe 14:

DELETE FROM abteilung
WHERE abteilungsnr=7;

Aufgabe 15:

SELECT AVG(gehalt), bezeichnung
FROM abteilung JOIN mitarbeiter 
ON(abteilungsnr = abteilung)
GROUP BY bezeichnung
HAVING AVG(gehalt)>2000